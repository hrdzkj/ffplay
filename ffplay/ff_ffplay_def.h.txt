   private TextView mTextServiceProvider, mTextSource, mTextCallType, mTextFilterType;
    EditText mEdtPhoneNum;
    TextView mTextStartTime;
    TextView mTextEndTime;
        }		
		
cx_blacknumber	号码
cx_filtering	过滤方式
	（filteringList.code字段）
cx_calltype	呼叫类型
	（callTypeList.code字段）
cx_operator	运营商
	（serviceProviderList.code字段）
cx_source	来源
	（sourceList.code字段）
cx_createtime_after	创建开始时间
cx_createtime_before	创建截止时间


    private static final int CODE_CallType = 0x01;
    private static final int CODE_ServiceProvider=0x02;
    private static final int CODE_Source=0x03;
    private static final int CODE_FilterType=0x04;
    private static final int CODE_StartTime=0x05;
    private static final int CODE_EndTime=0x05;
	
	
	    private void showServiceProviderPickView() {
        String showKey = "name";
        new DictionaryPicker.Builder(getContext()).setOptionList1(Dictionary.getServiceProviderList(), showKey).setOnSelectListener((item, options1) -> {
            mServiceProvider = item;
            mTextServiceProvider.setText(item.optString(showKey));
        }).build().show();
    }

结束
    private void showSource() {
        String showKey = "name";
        new DictionaryPicker.Builder(getContext()).setOptionList1(Dictionary.getSourceList(), showKey).setOnSelectListener((item, options1) -> {
            mSource = item;
            mTextSource.setText(item.optString(showKey));
        }).build().show();
    }


    private void showFilterTypePickView() {
        String showKey = "name";
        new DictionaryPicker.Builder(getContext()).setOptionList1(Dictionary.getFilterList(), showKey).setOnSelectListener((item, options1) -> {
            mFilterType = item;
            mTextFilterType.setText(item.optString(showKey));
        }).build().show();
    }
        }